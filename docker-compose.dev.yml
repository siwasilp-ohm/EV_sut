version: '3.8'

# Development Docker Compose Configuration
# This file is optimized for development with hot reloading and debugging

services:
  # MySQL Database (same as production)
  mysql:
    image: mysql:8.0
    container_name: evsolar-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: ev_solar_charging_dev
      MYSQL_USER: evsolar_dev
      MYSQL_PASSWORD: devpassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - evsolar-dev-network

  # Redis for development
  redis:
    image: redis:7-alpine
    container_name: evsolar-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - evsolar-dev-network

  # Backend Development Server
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: evsolar-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: ev_solar_charging_dev
      DB_USER: evsolar_dev
      DB_PASSWORD: devpassword
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: dev-jwt-secret-key
      JWT_EXPIRES_IN: 24h
      OCPP_PORT: 8080
      INVERTER_IP: 192.168.1.100
      INVERTER_PORT: 502
      PROMPTPAY_ID: 0123456789
      LOG_LEVEL: debug
      TZ: Asia/Bangkok
    ports:
      - "3000:3000"
      - "8080:8080"
      - "9229:9229"  # Node.js debugger port
    volumes:
      - ./server:/app/server:ro
      - ./database:/app/database:ro
      - ./scripts:/app/scripts:ro
      - ./.env:/app/.env:ro
      - dev_uploads:/app/uploads
      - dev_logs:/app/logs
      - /app/server/node_modules  # Anonymous volume for node_modules
    networks:
      - evsolar-dev-network
    depends_on:
      - mysql
      - redis
    command: ["npm", "run", "dev"]

  # Client Development Server
  client-dev:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: evsolar-client-dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3001:3000"
    volumes:
      - ./client/src:/app/src:ro
      - ./client/public:/app/public:ro
      - ./client/package.json:/app/package.json:ro
      - /app/node_modules  # Anonymous volume for node_modules
    networks:
      - evsolar-dev-network
    stdin_open: true
    tty: true

  # Admin Development Server
  admin-dev:
    build:
      context: ./admin
      dockerfile: Dockerfile.dev
    container_name: evsolar-admin-dev
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:3000
      - REACT_APP_WS_URL=ws://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3002:3000"
    volumes:
      - ./admin/src:/app/src:ro
      - ./admin/public:/app/public:ro
      - ./admin/package.json:/app/package.json:ro
      - /app/node_modules  # Anonymous volume for node_modules
    networks:
      - evsolar-dev-network
    stdin_open: true
    tty: true

  # Development Nginx (optional)
  nginx-dev:
    image: nginx:alpine
    container_name: evsolar-nginx-dev
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - dev_uploads:/var/www/uploads:ro
    networks:
      - evsolar-dev-network
    depends_on:
      - backend-dev
    profiles:
      - nginx

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: evsolar-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP port
      - "8025:8025"  # Web UI port
    networks:
      - evsolar-dev-network
    profiles:
      - mail

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: evsolar-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - evsolar-dev-network
    profiles:
      - db-admin

volumes:
  mysql_dev_data:
    driver: local
  dev_uploads:
    driver: local
  dev_logs:
    driver: local

networks:
  evsolar-dev-network:
    driver: bridge
